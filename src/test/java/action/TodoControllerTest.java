package action;import com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig;import com.google.appengine.tools.development.testing.LocalServiceTestHelper;import org.junit.*;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.springframework.test.context.web.WebAppConfiguration;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.setup.MockMvcBuilders;import org.springframework.web.context.WebApplicationContext;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;@WebAppConfiguration@ContextConfiguration("file:src/test/resources/test-servlet.xml")@RunWith(SpringJUnit4ClassRunner.class)public class TodoControllerTest {    @Autowired    WebApplicationContext wac;    private MockMvc mockmvc ;    private static final   LocalServiceTestHelper helper =            new LocalServiceTestHelper(                    new LocalDatastoreServiceTestConfig()                            .setDefaultHighRepJobPolicyUnappliedJobPercentage(0));    @BeforeClass    public static void  setUpClass() {       helper.setUp();    }    @AfterClass    public static void tearDown() {        helper.tearDown();    }    @Before    public void setup(){        this.mockmvc = MockMvcBuilders.webAppContextSetup(wac).build();    }    @Test    public void createTask_test_validte_path () throws Exception {        mockmvc.perform(get("/todo/createtask/pravanja/")).andExpect(status().is(200));    }    @Test    public void createTask_test_validte_result () throws Exception {        mockmvc.perform(get("/todo/createtask/pravanja/")).andExpect(jsonPath("$.status").value(true));    }}